---
import { Image } from "astro:assets";
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const { image, video, project, link, description, class: className } = Astro.props;
---

<li class:list={["group flex flex-col", className]}>
	<a href={translatePath(link)} aria-label={`Project ${project}`}>
		{
			video != null ? (
				<video class="aspect-[1.9/1] object-cover" src={video} loop muted playsinline autoplay />
			) : image ? (
				<Image class="aspect-[1.9/1] w-full object-cover" src={image} alt={project} />
			) : (
				<div>{project}</div>
			)
		}
	</a>
	<div class="px-2 py-4">
		<a href={translatePath(link)} class="flex items-baseline justify-between text-base font-medium lg:gap-x-8">
			<h3 class="preview-project-title font-mono text-base font-medium uppercase tracking-wide md:mt-0">
				{project}
			</h3>
			<span class="text-right text-base hover:text-primary-700 group-hover:animate-pulse-fast">â– </span>
		</a>
		{description && <p class="mt-8 line-clamp-2 text-sm text-slate-500">{description}</p>}
	</div>
</li>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { ScrambleTextPlugin } from "gsap/ScrambleTextPlugin";
	import { SplitText } from "gsap/SplitText";

	gsap.registerPlugin(ScrollTrigger, ScrambleTextPlugin, SplitText);

	function init() {
		let projectTitles = gsap.utils.toArray(".preview-project-title") as HTMLElement[];

		projectTitles.forEach((title) => {
			let split = new SplitText(title, { type: "words" });
			let words = split.words;

			var scramblePreviewTitleTl = gsap
				.timeline({
					defaults: { duration: 0.5, ease: "none" },
					scrollTrigger: {
						trigger: title,
						start: "start bottom",
						end: "center 80%",
						toggleActions: "play none resume reset",
						markers: false,
					},
				})
				.to(words, {
					scrambleText: {
						text: "{original}",
						chars: "lowerCase",
						revealDelay: 0.5,
						speed: 0.5,
						tweenLength: false,
					},
				});
		});
	}

	document.removeEventListener("DOMContentLoaded", init); // astro:page-load
	document.addEventListener("DOMContentLoaded", init); // astro:page-load
</script>
