---
import { getCollection } from "astro:content";
import EntriesOne from "@/components/blog/Entry.astro";
import Title from "@components/global/Title.astro";
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const allPosts = (await getCollection("posts"))
	.filter((post) => {
		const [postLang, ...slug] = post.slug.split("/");
		return postLang === lang;
	})
	.map((post) => {
		const [postLang, slug] = post.slug.split("/");

		return {
			...post,
			slug: slug,
		};
	})
	.sort((a, b) => Number(b.data.pubDate) - Number(a.data.pubDate));
---

<section class="section">
	<div class="col-span-full col-start-1 sm:col-span-2 sm:col-start-2">
		<div class="mx-auto flex flex-col gap-16 px-8 py-24 lg:pt-32 2xl:max-w-7xl">
			<!-- svg: first layer -->
			<svg class="hidden" viewBox="0 0 250 250" xmlns="http://www.w3.org/2000/svg">
				<filter id="article-noise-filter">
					<feTurbulence type="fractalNoise" baseFrequency="0.8" numOctaves="3" stitchTiles="stitch"></feTurbulence>
				</filter>
			</svg>
			<Title title={t("blog.title")} subtitle={t("blog.subtitle")} class="pb-10 pt-20 uppercase" />
			{
				allPosts && allPosts[0] && (
					<EntriesOne
						url={"/blog/" + allPosts[0].slug}
						title={allPosts[0].data.title}
						description={allPosts[0].data.description}
						alt={allPosts[0].data.title}
						pubDate={allPosts[0].data.pubDate.toString().slice(0, 10)}
						author={allPosts[0].data.author}
						image={allPosts[0].data.image.source}
					/>
				)
			}

			<div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
				{
					allPosts
						.slice(1)
						.map((post) => (
							<EntriesOne
								url={"/blog/" + post.slug}
								title={post.data.title}
								description={post.data.description}
								alt={post.data.title}
								pubDate={post.data.pubDate.toString().slice(0, 10)}
								author={post.data.author}
								image={post.data.image.source}
							/>
						))
				}
			</div>
		</div>
	</div>
</section>

<style>
	.article-overlay {
		background-repeat: no-repeat;
		background-position: center;
		background-size: cover;
	}
</style>
